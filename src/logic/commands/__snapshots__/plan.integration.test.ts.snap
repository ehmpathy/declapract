// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plan should be able to plan for an example project 1`] = `
Array [
  Array [
    "üîé reading configs and declarations...",
  ],
  Array [
    "üî¨Ô∏è evaluating project...",
  ],
  Array [
    "[90m  ‚úì evaluated practice:util-sleep[39m",
  ],
  Array [
    "[90m  ‚úì evaluated practice:serverless[39m",
  ],
  Array [
    "[90m  ‚úì evaluated practice:terraform[39m",
  ],
  Array [
    "[90m  ‚úì evaluated practice:prettier[39m",
  ],
  Array [
    "[90m  ‚úì evaluated practice:dates-and-times[39m",
  ],
  Array [
    "üìñ displaying results...",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/dev/main.tf[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/dev/versions.tf[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/prod/main.tf[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/prod/versions.tf[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/product/variables.tf[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m src/**/sleep.ts[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m .gitignore[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m .prettierignore[22m",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m .terraform-version[22m",
  ],
  Array [
    "  * [1m[1m[31m[FIX_MANUAL][39m[1m package.json[22m",
  ],
  Array [
    "    [31m‚úï[39m practice:dates-and-times.best-practice ",
  ],
  Array [
    "      [2mexpect([22m[31mreceived[39m[2m).[22mtoEqual[2m([22m[32mexpected[39m[2m) // deep equality[22m

      Expected: [32mObjectContaining {\\"dependencies\\": ObjectContaining {\\"date-fns\\": Any<String>}}[39m
      Received: [31m{\\"dependencies\\": {\\"@middy/core\\": \\"1.0.0\\", \\"aws-lambda\\": \\"1.0.5\\", \\"aws-sdk\\": \\"2.658.0\\", \\"joi\\": \\"17.4.0\\", \\"uuid\\": \\"3.4.0\\"}, \\"devDependencies\\": {\\"@types/aws-lambda\\": \\"8.10.40\\", \\"@types/jest\\": \\"27.0.1\\", \\"@types/uuid\\": \\"3.4.7\\", \\"@types/yesql\\": \\"3.2.2\\", \\"@typescript-eslint/eslint-plugin\\": \\"2.19.0\\", \\"@typescript-eslint/parser\\": \\"2.19.0\\", \\"core-js\\": \\"3.6.4\\", \\"eslint\\": \\"6.1.0\\", \\"eslint-config-airbnb-base\\": \\"14.0.0\\", \\"eslint-config-airbnb-typescript\\": \\"7.0.0\\", \\"eslint-config-prettier\\": \\"6.10.0\\", \\"eslint-plugin-import\\": \\"2.20.1\\", \\"eslint-plugin-prettier\\": \\"3.1.2\\", \\"jest\\": \\"27.0.6\\", \\"prettier\\": \\"2.0.2\\", \\"serverless\\": \\"1.66.0\\", \\"serverless-offline\\": \\"5.12.1\\", \\"serverless-pseudo-parameters\\": \\"2.5.0\\", \\"ts-jest\\": \\"27.0.4\\", \\"typescript\\": \\"3.8.3\\"}, \\"name\\": \\"@declapract{variable.serviceName}\\", \\"private\\": true, \\"scripts\\": {\\"build\\": \\"npm run build:clean && npm run build:compile\\", \\"build:clean\\": \\"rm dist/ -rf\\", \\"build:compile\\": \\"tsc -p ./tsconfig.build.json\\", \\"format\\": \\"prettier --write '**/*.ts' --config ./prettier.config.js\\", \\"postversion\\": \\"git push origin HEAD --tags --no-verify\\", \\"prepush\\": \\"npm run test && npm run build\\", \\"preversion\\": \\"npm run prepush\\", \\"test\\": \\"npm run test:types && npm run test:lint && npm run test:unit && npm run test:integration && npm run test:acceptance:locally\\", \\"test:acceptance\\": \\"npm run build && jest -c ./jest.acceptance.config.js --forceExit --verbose --runInBand\\", \\"test:acceptance:locally\\": \\"npm run build && LOCALLY=true jest -c ./jest.acceptance.config.js\\", \\"test:integration\\": \\"jest -c ./jest.integration.config.js --forceExit --coverage --verbose --passWithNoTests\\", \\"test:lint\\": \\"eslint -c ./.eslintrc.js src/**/*.ts\\", \\"test:types\\": \\"tsc -p ./tsconfig.build.json --noEmit\\", \\"test:unit\\": \\"jest -c ./jest.unit.config.js --forceExit --coverage --verbose --passWithNoTests\\"}, \\"version\\": \\"0.0.0\\"}[39m",
    "
",
  ],
  Array [
    "    [31m‚úï[39m practice:serverless.best-practice ",
  ],
  Array [
    "      [2mexpect([22m[31mreceived[39m[2m).[22mtoEqual[2m([22m[32mexpected[39m[2m) // deep equality[22m

      Expected: [32mObjectContaining {\\"devDependencies\\": ObjectContaining {\\"serverless\\": StringMatching /^(([0-9][0-9]+|[3-9]).([0-9][0-9]+|[0-9]).([0-9][0-9]+|[0-9])|([0-9][0-9]+|[2-9]).([0-9][0-9][0-9]+|[5-9][1-9]).([0-9][0-9]+|[0-9])|([0-9][0-9]+|[2-9]).([0-9][0-9][0-9]+|[5-9][0-9]).([0-9][0-9]+|[0-9]))$/}, \\"scripts\\": ObjectContaining {\\"deploy:dev\\": \\"SERVERLESS_STAGE=dev npm run deploy:release\\", \\"deploy:prod\\": \\"SERVERLESS_STAGE=prod npm run deploy:release && npm run deploy:send-notification\\", \\"deploy:release\\": \\"npm run build && sls deploy -v -s $SERVERLESS_STAGE\\", \\"deploy:send-notification\\": \\"curl -X POST -H 'Content-type: application/json' --data \\\\\\"{\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"$([ -z $DEPLOYER_NAME ] && git config user.name || echo $DEPLOYER_NAME) has deployed $npm_package_name@v$npm_package_version:[39m
      [32mhttps://github.com/@declapract{variable.organizationName}/$npm_package_name/tree/v$npm_package_version\\\\\\\\\\\\\\"}\\\\\\" @declapract{variable.slackReleaseWebHook}\\"}}[39m
      Received: [31m{\\"dependencies\\": {\\"@middy/core\\": \\"1.0.0\\", \\"aws-lambda\\": \\"1.0.5\\", \\"aws-sdk\\": \\"2.658.0\\", \\"joi\\": \\"17.4.0\\", \\"uuid\\": \\"3.4.0\\"}, \\"devDependencies\\": {\\"@types/aws-lambda\\": \\"8.10.40\\", \\"@types/jest\\": \\"27.0.1\\", \\"@types/uuid\\": \\"3.4.7\\", \\"@types/yesql\\": \\"3.2.2\\", \\"@typescript-eslint/eslint-plugin\\": \\"2.19.0\\", \\"@typescript-eslint/parser\\": \\"2.19.0\\", \\"core-js\\": \\"3.6.4\\", \\"eslint\\": \\"6.1.0\\", \\"eslint-config-airbnb-base\\": \\"14.0.0\\", \\"eslint-config-airbnb-typescript\\": \\"7.0.0\\", \\"eslint-config-prettier\\": \\"6.10.0\\", \\"eslint-plugin-import\\": \\"2.20.1\\", \\"eslint-plugin-prettier\\": \\"3.1.2\\", \\"jest\\": \\"27.0.6\\", \\"prettier\\": \\"2.0.2\\", \\"serverless\\": \\"1.66.0\\", \\"serverless-offline\\": \\"5.12.1\\", \\"serverless-pseudo-parameters\\": \\"2.5.0\\", \\"ts-jest\\": \\"27.0.4\\", \\"typescript\\": \\"3.8.3\\"}, \\"name\\": \\"@declapract{variable.serviceName}\\", \\"private\\": true, \\"scripts\\": {\\"build\\": \\"npm run build:clean && npm run build:compile\\", \\"build:clean\\": \\"rm dist/ -rf\\", \\"build:compile\\": \\"tsc -p ./tsconfig.build.json\\", \\"format\\": \\"prettier --write '**/*.ts' --config ./prettier.config.js\\", \\"postversion\\": \\"git push origin HEAD --tags --no-verify\\", \\"prepush\\": \\"npm run test && npm run build\\", \\"preversion\\": \\"npm run prepush\\", \\"test\\": \\"npm run test:types && npm run test:lint && npm run test:unit && npm run test:integration && npm run test:acceptance:locally\\", \\"test:acceptance\\": \\"npm run build && jest -c ./jest.acceptance.config.js --forceExit --verbose --runInBand\\", \\"test:acceptance:locally\\": \\"npm run build && LOCALLY=true jest -c ./jest.acceptance.config.js\\", \\"test:integration\\": \\"jest -c ./jest.integration.config.js --forceExit --coverage --verbose --passWithNoTests\\", \\"test:lint\\": \\"eslint -c ./.eslintrc.js src/**/*.ts\\", \\"test:types\\": \\"tsc -p ./tsconfig.build.json --noEmit\\", \\"test:unit\\": \\"jest -c ./jest.unit.config.js --forceExit --coverage --verbose --passWithNoTests\\"}, \\"version\\": \\"0.0.0\\"}[39m",
    "
",
  ],
  Array [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m prettier.config.js[22m",
  ],
  Array [
    "  * [1m[1m[31m[FIX_MANUAL][39m[1m serverless.yml[22m",
  ],
  Array [
    "    [31m‚úï[39m practice:serverless.best-practice ",
  ],
  Array [
    "      [32m- Expected toContain[39m
      [31m+ Received[39m

      [2m  service: @declapract{variable.serviceName}[22m

      [2m  provider:[22m
      [2m    name: aws[22m
      [2m    runtime: nodejs14.x[22m
      [2m    memorySize: 1024 # optional, in MB, default is 1024[22m
      [2m    timeout: 10[22m
      [2m    stage: \${opt:stage}[22m
      [2m    stackTags:[22m
      [2m      app: @declapract{variable.organizationName}[22m
      [2m      environment: \${self:provider.stage}[22m
      [2m      product: \${self:service}[22m
      [2m    environment:[22m
      [2m      SERVERLESS_STAGE: \${self:provider.stage}[22m
      [2m      NODE_ENV: \${self:custom.stageToNodeEnvMapping.\${self:provider.stage}}[22m
      [32m-   deploymentBucket: serverless-deployment-@declapract{variable.infrastructureNamespaceId}-\${self:provider.stage}[39m
      [31m+   deploymentBucket: serverless-deployment-@delapract{variable.infrastructureNamespaceId}-\${self:provider.stage}[39m
      [2m    vpc:[22m
      [2m      securityGroupIds:[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSecurityGroupId}[22m
      [2m      subnetIds:[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSubnet1Id}[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSubnet2Id}[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSubnet3Id}[22m
      [2m    iamRoleStatements:[22m
      [2m      ## paramstore access[22m
      [2m      - Effect: 'Allow'[22m
      [2m        Action: 'ssm:DescribeParameters'[22m
      [2m        Resource: '*'[22m
      [2m      - Effect: 'Allow'[22m
      [2m        Action: 'ssm:GetParameters'[22m
      [2m        Resource: arn:aws:ssm:\${aws:region}:\${aws:accountId}:parameter/*[22m
      [2m      - Effect: 'Allow'[22m
      [2m        Action: 'kms:Decrypt'[22m
      [2m        Resource: arn:aws:kms:\${aws:region}:\${aws:accountId}:alias/aws/ssm*[22m
      [2m      ## allow invocation of other lambdas[22m
      [2m      - Effect: Allow[22m
      [2m        Action:[22m
      [2m          - lambda:InvokeFunction[22m
      [2m          - lambda:InvokeAsync[22m
      [2m        Resource: '*'[22m

      [2m  custom:[22m
      [2m    stageToNodeEnvMapping:[22m
      [2m      test: 'test'[22m
      [2m      dev: 'development'[22m
      [2m      prod: 'production'[22m

      [2m  functions:[22m
",
    "
",
  ],
]
`;
