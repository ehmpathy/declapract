// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plan should be able to plan for an example project 1`] = `
[
  [
    "üîé reading configs and declarations...",
  ],
  [
    "üî¨Ô∏è evaluating project...",
  ],
  [
    "[90m  ‚úì evaluated practice:util-sleep[39m",
  ],
  [
    "[90m  ‚úì evaluated practice:npmrc[39m",
  ],
  [
    "[90m  ‚úì evaluated practice:serverless[39m",
  ],
  [
    "[90m  ‚úì evaluated practice:terraform[39m",
  ],
  [
    "[90m  ‚úì evaluated practice:prettier[39m",
  ],
  [
    "[90m  ‚úì evaluated practice:dates-and-times[39m",
  ],
  [
    "üìñ displaying results...",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/dev/main.tf[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/dev/versions.tf[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/prod/main.tf[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/environments/prod/versions.tf[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m provision/terraform/product/variables.tf[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m src/**/sleep.ts[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m .gitignore[22m",
  ],
  [
    "  * [1m[1m[33m[FIX_AUTOMATIC][39m[1m .npmrc[22m",
  ],
  [
    "    [33m‚úï[39m practice:npmrc.best-practice [90m(fix:appliable)[39m",
  ],
  [
    "      [32m- Expected file to exist[39m
      [31m+ Received file does not exist[39m",
    "
",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m .prettierignore[22m",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m .terraform-version[22m",
  ],
  [
    "  * [1m[1m[31m[FIX_MANUAL][39m[1m package.json[22m",
  ],
  [
    "    [31m‚úï[39m practice:dates-and-times.best-practice ",
  ],
  [
    "      [2mexpect([22m[31mreceived[39m[2m).[22mtoEqual[2m([22m[32mexpected[39m[2m) // deep equality[22m

      [32m- Expected  -  3[39m
      [31m+ Received  + 48[39m

      [32m- ObjectContaining {[39m
      [32m-   "dependencies": ObjectContaining {[39m
      [32m-     "date-fns": Any<String>,[39m
      [31m+ Object {[39m
      [31m+   "dependencies": Object {[39m
      [31m+     "@middy/core": "1.0.0",[39m
      [31m+     "aws-lambda": "1.0.5",[39m
      [31m+     "aws-sdk": "2.658.0",[39m
      [31m+     "joi": "17.4.0",[39m
      [31m+     "uuid": "3.4.0",[39m
      [31m+   },[39m
      [31m+   "devDependencies": Object {[39m
      [31m+     "@types/aws-lambda": "8.10.40",[39m
      [31m+     "@types/jest": "27.0.1",[39m
      [31m+     "@types/uuid": "3.4.7",[39m
      [31m+     "@types/yesql": "3.2.2",[39m
      [31m+     "@typescript-eslint/eslint-plugin": "2.19.0",[39m
      [31m+     "@typescript-eslint/parser": "2.19.0",[39m
      [31m+     "core-js": "3.6.4",[39m
      [31m+     "eslint": "6.1.0",[39m
      [31m+     "eslint-config-airbnb-base": "14.0.0",[39m
      [31m+     "eslint-config-airbnb-typescript": "7.0.0",[39m
      [31m+     "eslint-config-prettier": "6.10.0",[39m
      [31m+     "eslint-plugin-import": "2.20.1",[39m
      [31m+     "eslint-plugin-prettier": "3.1.2",[39m
      [31m+     "jest": "27.0.6",[39m
      [31m+     "prettier": "2.0.2",[39m
      [31m+     "serverless": "1.66.0",[39m
      [31m+     "serverless-offline": "5.12.1",[39m
      [31m+     "serverless-pseudo-parameters": "2.5.0",[39m
      [31m+     "ts-jest": "27.0.4",[39m
      [31m+     "typescript": "3.8.3",[39m
      [31m+   },[39m
      [31m+   "name": "@declapract{variable.serviceName}",[39m
      [31m+   "private": true,[39m
      [31m+   "scripts": Object {[39m
      [31m+     "build": "npm run build:clean && npm run build:compile",[39m
      [31m+     "build:clean": "rm dist/ -rf",[39m
      [31m+     "build:compile": "tsc -p ./tsconfig.build.json",[39m
      [31m+     "format": "prettier --write '**/*.ts' --config ./prettier.config.js",[39m
      [31m+     "postversion": "git push origin HEAD --tags --no-verify",[39m
      [31m+     "prepush": "npm run test && npm run build",[39m
      [31m+     "preversion": "npm run prepush",[39m
      [31m+     "test": "npm run test:types && npm run test:lint && npm run test:unit && npm run test:integration && npm run test:acceptance:locally",[39m
      [31m+     "test:acceptance": "npm run build && jest -c ./jest.acceptance.config.js --forceExit --verbose --runInBand",[39m
      [31m+     "test:acceptance:locally": "npm run build && LOCALLY=true jest -c ./jest.acceptance.config.js",[39m
      [31m+     "test:integration": "jest -c ./jest.integration.config.js --forceExit --coverage --verbose --passWithNoTests",[39m
      [31m+     "test:lint": "eslint -c ./.eslintrc.js src/**/*.ts",[39m
      [31m+     "test:types": "tsc -p ./tsconfig.build.json --noEmit",[39m
      [31m+     "test:unit": "jest -c ./jest.unit.config.js --forceExit --coverage --verbose --passWithNoTests",[39m
      [2m    },[22m
      [31m+   "version": "0.0.0",[39m
      [2m  }[22m",
    "
",
  ],
  [
    "    [31m‚úï[39m practice:serverless.best-practice ",
  ],
  [
    "      [2mexpect([22m[31mreceived[39m[2m).[22mtoEqual[2m([22m[32mexpected[39m[2m) // deep equality[22m

      [32m- Expected  -  9[39m
      [31m+ Received  + 47[39m

      [32m- ObjectContaining {[39m
      [32m-   "devDependencies": ObjectContaining {[39m
      [32m-     "serverless": StringMatching /^(([0-9][0-9]+|[3-9]).([0-9][0-9]+|[0-9]).([0-9][0-9]+|[0-9])|([0-9][0-9]+|[2-9]).([0-9][0-9][0-9]+|[5-9][1-9]).([0-9][0-9]+|[0-9])|([0-9][0-9]+|[2-9]).([0-9][0-9][0-9]+|[5-9][0-9]).([0-9][0-9]+|[0-9]))$/,[39m
      [31m+ Object {[39m
      [31m+   "dependencies": Object {[39m
      [31m+     "@middy/core": "1.0.0",[39m
      [31m+     "aws-lambda": "1.0.5",[39m
      [31m+     "aws-sdk": "2.658.0",[39m
      [31m+     "joi": "17.4.0",[39m
      [31m+     "uuid": "3.4.0",[39m
      [2m    },[22m
      [32m-   "scripts": ObjectContaining {[39m
      [32m-     "deploy:dev": "SERVERLESS_STAGE=dev npm run deploy:release",[39m
      [32m-     "deploy:prod": "SERVERLESS_STAGE=prod npm run deploy:release && npm run deploy:send-notification",[39m
      [32m-     "deploy:release": "npm run build && sls deploy -v -s $SERVERLESS_STAGE",[39m
      [32m-     "deploy:send-notification": "curl -X POST -H 'Content-type: application/json' --data \\"{\\\\\\"text\\\\\\":\\\\\\"$([ -z $DEPLOYER_NAME ] && git config user.name || echo $DEPLOYER_NAME) has deployed $npm_package_name@v$npm_package_version:[39m
      [32m- https://github.com/@declapract{variable.organizationName}/$npm_package_name/tree/v$npm_package_version\\\\\\"}\\" @declapract{variable.slackReleaseWebHook}",[39m
      [31m+   "devDependencies": Object {[39m
      [31m+     "@types/aws-lambda": "8.10.40",[39m
      [31m+     "@types/jest": "27.0.1",[39m
      [31m+     "@types/uuid": "3.4.7",[39m
      [31m+     "@types/yesql": "3.2.2",[39m
      [31m+     "@typescript-eslint/eslint-plugin": "2.19.0",[39m
      [31m+     "@typescript-eslint/parser": "2.19.0",[39m
      [31m+     "core-js": "3.6.4",[39m
      [31m+     "eslint": "6.1.0",[39m
      [31m+     "eslint-config-airbnb-base": "14.0.0",[39m
      [31m+     "eslint-config-airbnb-typescript": "7.0.0",[39m
      [31m+     "eslint-config-prettier": "6.10.0",[39m
      [31m+     "eslint-plugin-import": "2.20.1",[39m
      [31m+     "eslint-plugin-prettier": "3.1.2",[39m
      [31m+     "jest": "27.0.6",[39m
      [31m+     "prettier": "2.0.2",[39m
      [31m+     "serverless": "1.66.0",[39m
      [31m+     "serverless-offline": "5.12.1",[39m
      [31m+     "serverless-pseudo-parameters": "2.5.0",[39m
      [31m+     "ts-jest": "27.0.4",[39m
      [31m+     "typescript": "3.8.3",[39m
      [2m    },[22m
      [31m+   "name": "@declapract{variable.serviceName}",[39m
      [31m+   "private": true,[39m
      [31m+   "scripts": Object {[39m
      [31m+     "build": "npm run build:clean && npm run build:compile",[39m
      [31m+     "build:clean": "rm dist/ -rf",[39m
      [31m+     "build:compile": "tsc -p ./tsconfig.build.json",[39m
      [31m+     "format": "prettier --write '**/*.ts' --config ./prettier.config.js",[39m
      [31m+     "postversion": "git push origin HEAD --tags --no-verify",[39m
      [31m+     "prepush": "npm run test && npm run build",[39m
      [31m+     "preversion": "npm run prepush",[39m
      [31m+     "test": "npm run test:types && npm run test:lint && npm run test:unit && npm run test:integration && npm run test:acceptance:locally",[39m
      [31m+     "test:acceptance": "npm run build && jest -c ./jest.acceptance.config.js --forceExit --verbose --runInBand",[39m
      [31m+     "test:acceptance:locally": "npm run build && LOCALLY=true jest -c ./jest.acceptance.config.js",[39m
      [31m+     "test:integration": "jest -c ./jest.integration.config.js --forceExit --coverage --verbose --passWithNoTests",[39m
      [31m+     "test:lint": "eslint -c ./.eslintrc.js src/**/*.ts",[39m
      [31m+     "test:types": "tsc -p ./tsconfig.build.json --noEmit",[39m
      [31m+     "test:unit": "jest -c ./jest.unit.config.js --forceExit --coverage --verbose --passWithNoTests",[39m
      [31m+   },[39m
      [31m+   "version": "0.0.0",[39m
      [2m  }[22m",
    "
",
  ],
  [
    "  * [1m[1m[90m[NO_CHANGE][39m[1m prettier.config.js[22m",
  ],
  [
    "  * [1m[1m[31m[FIX_MANUAL][39m[1m serverless.yml[22m",
  ],
  [
    "    [31m‚úï[39m practice:serverless.best-practice ",
  ],
  [
    "      [32m- Expected toContain[39m
      [31m+ Received[39m

      [2m  service: @declapract{variable.serviceName}[22m

      [2m  provider:[22m
      [2m    name: aws[22m
      [2m    runtime: nodejs14.x[22m
      [2m    memorySize: 1024 # optional, in MB, default is 1024[22m
      [2m    timeout: 10[22m
      [2m    stage: \${opt:stage}[22m
      [2m    stackTags:[22m
      [2m      app: @declapract{variable.organizationName}[22m
      [2m      environment: \${self:provider.stage}[22m
      [2m      product: \${self:service}[22m
      [2m    environment:[22m
      [2m      SERVERLESS_STAGE: \${self:provider.stage}[22m
      [2m      NODE_ENV: \${self:custom.stageToNodeEnvMapping.\${self:provider.stage}}[22m
      [32m-   deploymentBucket: serverless-deployment-@declapract{variable.infrastructureNamespaceId}-\${self:provider.stage}[39m
      [31m+   deploymentBucket: serverless-deployment-@delapract{variable.infrastructureNamespaceId}-\${self:provider.stage}[39m
      [2m    vpc:[22m
      [2m      securityGroupIds:[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSecurityGroupId}[22m
      [2m      subnetIds:[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSubnet1Id}[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSubnet2Id}[22m
      [2m        - \${ssm:/tf/infrastructure/vpc/main/lambdaSubnet3Id}[22m
      [2m    iamRoleStatements:[22m
      [2m      ## paramstore access[22m
      [2m      - Effect: 'Allow'[22m
      [2m        Action: 'ssm:DescribeParameters'[22m
      [2m        Resource: '*'[22m
      [2m      - Effect: 'Allow'[22m
      [2m        Action: 'ssm:GetParameters'[22m
      [2m        Resource: arn:aws:ssm:\${aws:region}:\${aws:accountId}:parameter/*[22m
      [2m      - Effect: 'Allow'[22m
      [2m        Action: 'kms:Decrypt'[22m
      [2m        Resource: arn:aws:kms:\${aws:region}:\${aws:accountId}:alias/aws/ssm*[22m
      [2m      ## allow invocation of other lambdas[22m
      [2m      - Effect: Allow[22m
      [2m        Action:[22m
      [2m          - lambda:InvokeFunction[22m
      [2m          - lambda:InvokeAsync[22m
      [2m        Resource: '*'[22m

      [2m  custom:[22m
      [2m    stageToNodeEnvMapping:[22m
      [2m      test: 'test'[22m
      [2m      dev: 'development'[22m
      [2m      prod: 'production'[22m

      [2m  functions:[22m
",
    "
",
  ],
]
`;
